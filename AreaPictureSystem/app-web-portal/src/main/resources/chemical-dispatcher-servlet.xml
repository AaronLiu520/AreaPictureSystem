<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
	http://www.springframework.org/schema/task    
	http://www.springframework.org/schema/task/spring-task-4.1.xsd ">

	<!--导入配置文件-->
	<context:property-placeholder location="classpath:*.properties"/>

	<!-- 自动扫包 -->
	<context:component-scan base-package="org.app">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
 
	<!-- 注解探测器（组件扫描）@Controller -->
	<context:component-scan base-package="org.app">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	<!-- 添加aop -->
	<aop:aspectj-autoproxy />
	
	
	
	

	<!-- 启动springMVC的注解功能，他会自动注册HandlerMapping,HandlerAdapter,ExceptionResolver的相关实例 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
			</bean>
			<ref bean="mappingJacksonHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- enable autowire -->

	<!-- 处理JSON数据转换的 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<!-- 为了处理返回的JSON数据的编码，默认是ISO-88859-1的，这里把它设置为UTF-8,解决有乱码的情况 -->
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!--由于web.xml中设置是由springMVC拦截所有请求，于是在读取静态资源文件的时候就会受到影响（说白了就是读不到） 经过下面的配置，该标签的作用就是所有页面中引用/css/**的资源，都会从/resources/styles/
		里面查找 -->
	<mvc:resources mapping="/assets/**" location="/WEB-INF/assets/" />
	<mvc:resources mapping="/FileUpload/**" location="/WEB-INF/FileUpload/" />
						     
	<!-- 拦截器 -->			 

	<!-- 多个拦截器,顺序执行 -->
	<!-- 如果不配置或/*,将拦截所有的Controller -->
	<mvc:interceptors>
		
		
		<mvc:interceptor>
			<mvc:mapping path="/*/**" />
			<mvc:mapping path="/*" />
			<mvc:exclude-mapping path="/web/**" />
			<mvc:exclude-mapping path="/files/**" />
			<mvc:exclude-mapping path="/uploadmr/**" />
			<mvc:exclude-mapping path="/web/index" />
			<mvc:exclude-mapping path="/adminUser/login" /><!-- 
				访问登录页面 -->
			<mvc:exclude-mapping path="/adminUser/checkLogin" /><!-- 
				登录 -->
			<bean class="org.app.webAdmin.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
		
		
		<mvc:interceptor>
			<mvc:mapping path="/web/**" />
			<mvc:exclude-mapping path="/FileUpload/**" />
			<bean class="org.app.webAdmin.interceptor.WebInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>


	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/" p:suffix=".jsp" />
	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- set the max upload size 100M -->
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>

		<property name="maxInMemorySize">
			<value>1024000</value>
		</property>

	</bean>

	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="protocol" value="${mail.protocol}"></property>
		<property name="host" value="${mail.host}"></property>
		<property name="port" value="${mail.port}"></property>
		<property name="username" value="${mail.username}"></property>
		<property name="password" value="${mail.password}"></property>
		<property  name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<!-- 如果是网易邮箱， mail.smtp.starttls.enable 设置为 false-->  
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
			</props>
		</property>
	</bean>	

	<bean  id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10"></property>
		<property name="maxPoolSize" value="30"></property>
	</bean>










</beans>